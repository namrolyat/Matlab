function [img] = MakeRandomChecks(ih,iw,checksize,color1,color2,r1,r2,bcolor);% [img] = MakeRandomChecks(ih,iw,checksize,color1,color2,r1,r2,bcolor)%% Function makes a pattern of random checks in a rectangular, circular or annulus aperature.% ih = image height, iw = image width (in pixels)% checksize = width of checks (pixels)% color1, color2 = color of checks% r1 and r2 = inner and outer radii of annulus (r1=0 makes circle), % if r1,r2 not specified, program makes rectangle % bcolor = background color (default = (color1 + color2)/2)% Created on 2006/07/24 by Frank Tong% based partly on function MakeChecks by FTchecksize = round(checksize);	% line added on 2002/07/24 to eliminate non-integer indicestemp_iw = ceil(iw/checksize);temp_ih = ceil(ih/checksize); img = rand(temp_ih, temp_iw);med = median(img(:));img(img<=med) = color1;img(img>med) = color2;img = kron(img,ones(checksize));											% magnify to given checksizecrop = [round((size(img,1)-ih)/2), round((size(img,2)-iw)/2)];				% crop edges of img to desired size (ih x iw)img = img(1+crop(1):ih+crop(1),1+crop(2):iw+crop(2));						% img = img*(color1-color2)+color2;											% replace with color1 and color2if nargin > 6	if nargin < 8; bcolor = round((color1+color2)/2); end		% bcolor = mean intensity if not specified	[X,Y] = meshgrid(1:iw,1:ih);								% specify range of grid (or image size)	eccen=sqrt((X-(iw+1)/2).^2+(Y-(ih+1)/2).^2); 				% calculate eccentricity map of grid (relative to center, units= pixels)	img(eccen < r1 | eccen > r2) = bcolor;						% fill regions outside r1 and r2 (annulus) with background color	end