function [img] = MakeFixation(color1,color2,bcolor,r1,r2,r3,r4,r5,r6);% [img] = MakeFixation(color1,color2,bcolor,r1,r2,r3,r4,r5,r6)%% Function creates fixation bull's-eye with rings of increasing size% alternating in color against given background color.%% color1 = color of odd-numbered rings (including 1st "fixation dot"), range 0-255% color2 = color of even-numbered rings% bcolor = color of background% r1 to r6 = radius of each ring (increasing size, max number of rings = 6)%% created by Frank Tong on 2000/01/06if nargin < 9; r6 = 0; endif nargin < 8; r5 = 0; endif nargin < 7; r4 = 0; endif nargin < 6; r3 = 0; endif nargin < 5; r2 = 0; endif nargin < 4; r1 = 5; r2 = 10; end		%default fixation bull's-eye, diameter = 20 pixels, center dot = 10 pixelsif nargin < 3; bcolor = 128; end		%default background color grayif nargin < 2; color2 = 0; end			%default color blackif nargin < 1; color1 = 255; end		%default color whitercolor = [color1,color2,color1,color2,color1,color2];r = [0 r1 r2 r3 r4 r5 r6];[X,Y] = meshgrid(1:max(r)*2,1:max(r)*2);	% specify range of grideccen=sqrt((X-max(r)-0.5).^2+(Y-max(r)-0.5).^2); % calculates eccentricity map of grid (relative to center, units= pixels)img = ones(max(r)*2)*bcolor;numR = size(r,2)-1;	%Number of rings or dotsfor n = 1:numR	circle = eccen<r(n+1) & eccen>=r(n);		img = img + (circle*(rcolor(n)-bcolor));end