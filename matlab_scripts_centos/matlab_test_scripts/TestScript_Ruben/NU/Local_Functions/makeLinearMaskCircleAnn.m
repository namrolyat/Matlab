function [img] = makeLinearMaskCircleAnn(ih,iw, r_center, start_linear_decay, r_thresh)% function [img] = makeLinearMaskCircle(ih,iw, r_center, start_linear_decay, r_thresh);%% Function makes a circular mask or annulus, %% ih = image height, iw = image width (in pixels)% if r_center = 0, mask forms an circle% if r_center > 0, mask forms an annulus %% start_linear_decay = where linear decay starts % r_thresh = max spatial extent of  window%    set all intensity values at this distance from r_center (and beyond) to equal 0 %% created by JJ[x,y]=meshgrid( [(1:iw)-(iw/2)], [(1:ih)-(ih/2)]);	% make a 2-D grid of x,y positionseccen = sqrt((x).^2+(y).^2); 	% calculate eccentricity of each point in grid relative to center of 2D image                                            img = double(and(eccen<r_thresh, eccen>r_center));start_decay1 = r_thresh - start_linear_decay;start_decay2 = r_center + start_linear_decay;eccen = img.* eccen;lin_dec = linspace(0,1,start_linear_decay+1);for i = 1:length(lin_dec)    ind = or(eccen>=start_decay1-1+i,eccen<=start_decay2+1-i);    img(ind) = 1-lin_dec(i);end